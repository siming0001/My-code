C51 COMPILER V9.54   1602                                                                  12/10/2021 13:28:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 1602
OBJECT MODULE PLACED IN 1602.OBJ
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE 1602.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "1602.h"
   2          #include "delay.h"
   3          #include <intrins.h>
   4          
   5          #define uchar unsigned char
   6          #define uint unsigned int
   7          
   8          #define _NOP() _nop_()
   9          sbit RS = P2^0;   //定义端口 
  10          sbit RW = P2^1;
  11          sbit EN = P2^2;
  12          
  13          #define DataPort    P0        
  14          #define DataPIN     P0
  15          
  16          #define CLR_RS (RS=0) 
  17          #define SET_RS (RS=1) 
  18          #define CLR_RW (RW=0) 
  19          #define SET_RW (RW=1)
  20          #define CLR_EN (EN=0)
  21          #define SET_EN (EN=1) 
  22          
  23          /*
  24            LcdReset();               //LCD1602初始化
  25            DelayMs(10);  
  26            sprintf(temp,"1111111111111111");//更新显示
  27            DispStr(0,0,(unsigned char *)temp);//打印显示
  28            sprintf(temp,"1111111111111111");//更新显示
  29            DispStr(0,1,(unsigned char *)temp);//打印显示
  30          */
  31          /***********************************************
  32          函数名称：DispStr
  33          功    能：让液晶从某个位置起连续显示一个字符串
  34          参    数：x--位置的列坐标
  35                    y--位置的行坐标
  36                    ptr--指向字符串存放位置的指针
  37          返回值  ：无
  38          ***********************************************/
  39          void DispStr(uchar x,uchar y,uchar *ptr) 
  40          {
  41   1          uchar *temp;
  42   1          uchar i,n = 0;
  43   1          
  44   1          temp = ptr;
  45   1          while(*ptr++ != '\0')   n++;    //计算字符串有效字符的个数
  46   1          
  47   1          for (i=0;i<n;i++)
  48   1          {
  49   2              Disp1Char(x++,y,temp[i]);
  50   2              if (x == 0x10)
  51   2              {
  52   3                  break;
  53   3              }
  54   2          }
  55   1      }
C51 COMPILER V9.54   1602                                                                  12/10/2021 13:28:42 PAGE 2   

  56          
  57          /*******************************************
  58          函数名称：DispNchar
  59          功    能：让液晶从某个位置起连续显示N个字符
  60          参    数：x--位置的列坐标
  61                    y--位置的行坐标
  62                    n--字符个数
  63                    ptr--指向字符存放位置的指针
  64          返回值  ：无
  65          *******************************************
  66          void DispNChar(uchar x,uchar y, uchar n,uchar *ptr) 
  67          {
  68              uchar i;
  69              
  70              for (i=0;i<n;i++)
  71              {
  72                  Disp1Char(x++,y,ptr[i]);
  73                  if (x == 0x10)
  74                  {
  75                     x = 0; 
  76                      y ^= 1;
  77                  }
  78              }
  79          }
  80          */
  81          /*******************************************
  82          函数名称：LocateXY
  83          功    能：向液晶输入显示字符位置的坐标信息
  84          参    数：x--位置的列坐标
  85                    y--位置的行坐标
  86          返回值  ：无
  87          ********************************************/
  88          void LocateXY(uchar x,uchar y) 
  89          {
  90   1          uchar temp;
  91   1      
  92   1          temp = x&0x0f;
  93   1          y &= 0x01;
  94   1          if(y)   temp |= 0x40;  //如果在第2行
  95   1          temp |= 0x80;
  96   1      
  97   1          LcdWriteCommand(temp,1);
  98   1      }
  99          
 100          /*******************************************
 101          函数名称：Disp1Char
 102          功    能：在某个位置显示一个字符
 103          参    数：x--位置的列坐标
 104                    y--位置的行坐标
 105                    data--显示的字符数据
 106          返回值  ：无
 107          ********************************************/
 108          void Disp1Char(uchar x,uchar y,uchar data1) 
 109          {
 110   1          LocateXY( x, y );     
 111   1          LcdWriteData( data1 );    
 112   1      }
 113          
 114          /*******************************************
 115          函数名称：LcdReset
 116          功    能：对1602液晶模块进行复位操作
 117          参    数：无
C51 COMPILER V9.54   1602                                                                  12/10/2021 13:28:42 PAGE 3   

 118          返回值  ：无
 119          ********************************************/
 120          void LcdReset(void) 
 121          {
 122   1      //    DataDir  = 0xFF;                 //数据端口设为输出状态 
 123   1          LcdWriteCommand(0x38, 0);     //规定的复位操作
 124   1          DelayMs(5);
 125   1          LcdWriteCommand(0x38, 0);   
 126   1          DelayMs(5);
 127   1          LcdWriteCommand(0x38, 0);
 128   1          DelayMs(5);
 129   1      
 130   1          LcdWriteCommand(0x38, 1);   //显示模式设置
 131   1          LcdWriteCommand(0x08, 1);   //显示关闭
 132   1          LcdWriteCommand(0x01, 1);     //显示清屏
 133   1          LcdWriteCommand(0x06, 1);   //写字符时整体不移动
 134   1          LcdWriteCommand(0x0c, 1);   //显示开，不开游标，不闪烁
 135   1      }
 136          
 137          /*------------------------------------------------
 138                          清屏函数
 139          ------------------------------------------------*/
 140          void LcdClear(void) 
 141          { 
 142   1        LcdWriteCommand(0x01,1); 
 143   1        DelayMs(5);
 144   1      }
 145          
 146          /*******************************************
 147          函数名称：LcdWriteCommand
 148          功    能：向液晶模块写入命令
 149          参    数：cmd--命令，
 150                    chk--是否判忙的标志，1：判忙，0：不判
 151          返回值  ：无
 152          ********************************************/
 153          void LcdWriteCommand(uchar cmd,uchar chk) 
 154          {
 155   1      
 156   1          if (chk) WaitForEnable();   // 检测忙信号?
 157   1          
 158   1          CLR_RS; 
 159   1          CLR_RW; 
 160   1          _NOP();
 161   1      
 162   1          DataPort = cmd;             //将命令字写入数据端口 
 163   1          _NOP();         
 164   1          
 165   1          SET_EN;                     //产生使能脉冲信号
 166   1          _NOP();
 167   1          _NOP();
 168   1          CLR_EN;     
 169   1      }
 170          
 171          /*******************************************
 172          函数名称：LcdWriteData
 173          功    能：向液晶显示的当前地址写入显示数据
 174          参    数：data--显示字符数据
 175          返回值  ：无
 176          ********************************************/
 177          void LcdWriteData( uchar data1 ) 
 178          {
 179   1          WaitForEnable();        //等待液晶不忙
C51 COMPILER V9.54   1602                                                                  12/10/2021 13:28:42 PAGE 4   

 180   1          SET_RS;
 181   1          CLR_RW; 
 182   1      
 183   1          SET_EN;
 184   1        
 185   1        _NOP();
 186   1          DataPort = data1;        //将显示数据写入数据端口
 187   1          _NOP();
 188   1                      //产生使能脉冲信号
 189   1          _NOP(); 
 190   1          _NOP(); 
 191   1          CLR_EN;   
 192   1      }
 193          
 194          /*******************************************
 195          函数名称：WaitForEnable
 196          功    能：等待1602液晶完成内部操作
 197          参    数：无
 198          返回值  ：无
 199          ********************************************/
 200          void WaitForEnable(void) 
 201          {
 202   1          unsigned int later=0;
 203   1        DataPort=0xff;
 204   1          CLR_RS;
 205   1          SET_RW;
 206   1          _NOP();
 207   1          SET_EN; 
 208   1          _NOP();
 209   1          _NOP();
 210   1      //    while((DataPIN&Busy)!=0);    
 211   1          while(((DataPIN&0x80)!=0)&&(later<1000))  //检测忙标志
 212   1          {
 213   2            DelayUs2x(2);
 214   2            later++;        
 215   2          }
 216   1          CLR_EN;
 217   1      //    DataDir|=0xFF;  //将P4口切换为输出状态
 218   1      }   
 219          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
